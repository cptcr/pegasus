{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json",
    "tsconfigRootDir": "."
  },
  "env": {
    "node": true,
    "es2022": true
  },
  "plugins": [
    "@typescript-eslint",
    "import",
    "promise",
    "security"
  ],
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "@typescript-eslint/recommended-requiring-type-checking",
    "@typescript-eslint/strict",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:promise/recommended",
    "plugin:security/recommended-legacy"
  ],
  "rules": {
    // TypeScript Strictest Rules
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/strict-boolean-expressions": ["error", {
      "allowString": false,
      "allowNumber": false,
      "allowNullableObject": false
    }],
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/no-floating-promises": ["error", { "ignoreVoid": false }],
    "@typescript-eslint/no-misused-promises": ["error", {
      "checksVoidReturn": true,
      "checksConditionals": true
    }],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/array-type": ["error", { "default": "array-simple" }],
    "@typescript-eslint/consistent-type-assertions": ["error", {
      "assertionStyle": "never"
    }],
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/consistent-type-imports": ["error", {
      "prefer": "type-imports",
      "fixStyle": "inline-type-imports"
    }],
    "@typescript-eslint/no-confusing-void-expression": "error",
    "@typescript-eslint/no-meaningless-void-operator": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-return-this-type": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-useless-empty-export": "error",
    
    // JavaScript Strictest Rules  
    "no-console": "error",
    "no-debugger": "error",
    "no-alert": "error",
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-script-url": "error",
    "no-throw-literal": "error",
    "prefer-promise-reject-errors": "error",
    "no-return-await": "off", // conflicts with @typescript-eslint/return-await
    "@typescript-eslint/return-await": "error",
    "no-await-in-loop": "error",
    "no-promise-executor-return": "error",
    "require-atomic-updates": "error",
    "no-var": "error",
    "prefer-const": "error",
    "prefer-template": "error",
    "no-duplicate-imports": "error",
    "no-unused-expressions": ["error", { "allowShortCircuit": false, "allowTernary": false }],
    "no-useless-return": "error",
    "no-lonely-if": "error",
    "complexity": ["error", 10],
    "max-depth": ["error", 3],
    "max-lines": ["error", 300],
    "max-lines-per-function": ["error", 50],
    "max-params": ["error", 4],
    "max-statements": ["error", 15],
    "no-magic-numbers": ["error", { 
      "ignore": [0, 1, -1, 100, 1000], 
      "ignoreArrayIndexes": true,
      "enforceConst": true
    }],
    "curly": ["error", "all"],
    "eqeqeq": ["error", "always"],
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-loop-func": "error",
    "no-param-reassign": ["error", { "props": true }],
    "no-return-assign": ["error", "always"],
    "no-sequences": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-private-class-members": "error",
    "no-use-before-define": ["error", { "functions": true, "classes": true, "variables": true }],
    "no-useless-call": "error",
    "no-useless-concat": "error",
    "no-void": "error",
    "radix": "error",
    "yoda": ["error", "never"],
    "array-callback-return": ["error", { "checkForEach": true }],
    "no-constructor-return": "error",
    "no-unreachable-loop": "error",
    "require-unicode-regexp": "error",
    
    // Import Rules
    "import/no-unresolved": "error",
    "import/named": "error",
    "import/default": "error",
    "import/namespace": "error",
    "import/no-absolute-path": "error",
    "import/no-dynamic-require": "error",
    "import/no-self-import": "error",
    "import/no-cycle": "error",
    "import/no-useless-path-segments": "error",
    "import/no-mutable-exports": "error",
    "import/no-deprecated": "error",
    "import/no-extraneous-dependencies": ["error", { "devDependencies": ["**/*.test.ts", "**/*.spec.ts", "**/*.config.*"] }],
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/order": ["error", {
      "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
      "newlines-between": "always",
      "alphabetize": { "order": "asc", "caseInsensitive": true }
    }],
    
    // Promise Rules  
    "promise/always-return": "error",
    "promise/no-return-wrap": "error",
    "promise/param-names": "error",
    "promise/catch-or-return": "error",
    "promise/no-nesting": "error",
    "promise/no-promise-in-callback": "error",
    "promise/no-callback-in-promise": "error",
    "promise/no-new-statics": "error",
    "promise/no-return-in-finally": "error",
    "promise/valid-params": "error",
    "promise/prefer-await-to-then": "error",
    
    // Security Rules
    "security/detect-object-injection": "error",
    "security/detect-non-literal-regexp": "error",
    "security/detect-non-literal-require": "error",
    "security/detect-non-literal-fs-filename": "error",
    "security/detect-eval-with-expression": "error",
    "security/detect-pseudoRandomBytes": "error",
    "security/detect-possible-timing-attacks": "error",
    "security/detect-buffer-noassert": "error",
    "security/detect-child-process": "error",
    "security/detect-new-buffer": "error",
    "security/detect-unsafe-regex": "error"
  },
  "overrides": [
    {
      "files": ["*.test.ts", "*.spec.ts", "**/__tests__/**"],
      "rules": {
        "no-magic-numbers": "off",
        "@typescript-eslint/no-magic-numbers": "off",
        "max-lines": "off",
        "max-lines-per-function": "off",
        "max-statements": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-explicit-any": "off"
      }
    },
    {
      "files": ["*.config.ts", "*.config.js"],
      "rules": {
        "no-console": "off",
        "unicorn/prefer-module": "off",
        "import/no-extraneous-dependencies": "off"
      }
    }
  ],
  "ignorePatterns": [
    "dist",
    "node_modules",
    "coverage",
    "*.js",
    "*.mjs",
    "*.cjs",
    "drizzle",
    "scripts"
  ]
}