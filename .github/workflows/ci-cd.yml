name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pegasus_test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    - run: npm ci
    - run: npm run typecheck
    - run: npm run build
    - run: echo "NODE_ENV=test" >> .env
    - run: echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/pegasus_test" >> .env
    - run: echo "BOT_TOKEN=test_token" >> .env
    - run: echo "CLIENT_ID=test_client" >> .env
    - run: npm run health:check

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    - run: npm ci
    - run: npm audit --audit-level moderate

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - run: docker build -t pegasus-bot:latest .
